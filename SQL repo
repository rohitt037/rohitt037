USE DotNetCourseDatabase
GO

----------------------------------------------DELETING----------------------------------------------------------------

-- CREATE PROCEDURE TutorialAppSchema.spUser_Delete
--       @UserId INT
-- AS
-- BEGIN
--       DELETE FROM TutorialAppSchema.Users 
--             WHERE UserId = @UserId
--       DELETE FROM TutorialAppSchema.UserJobInfo 
--             WHERE UserId = @UserId
--       DELETE FROM TutorialAppSchema.UserSalary 
--             WHERE UserId = @UserId
-- END

-----------------------------------------------------------------checking user availability, updating , adding-------------------------------
-- CREATE OR ALTER Procedure TutorialAppSchema.spUser_Upsert
-- --exrt
-- 	@FirstName NVARCHAR(50) ,
-- 	@LastName NVARCHAR(50) ,
-- 	@Email NVARCHAR(50) ,
-- 	@Gender NVARCHAR(50) ,
-- 	@JobTitle NVARCHAR(50) ,
-- 	@Salary DECIMAL(18, 4) ,
-- 	@Department NVARCHAR(50) ,
-- 	@Active BIT ,
-- 	@UserId INT = NULL
--  AS
--  BEGIN
--       IF NOT EXISTS (SELECT * FROM TutorialAppSchema.Users WHERE UserId = @UserId) 
--       /*if we are having userid in this table then we are addinhg all the above information*/
--             BEGIN

--             IF NOT EXISTS (SELECT * FROM TutorialAppSchema.Users WHERE Email = @Email)
--              /*if we are having Email in this table then we are addinhg all the above information*/
--                   BEGIN
--                         DECLARE @OutputUserId INT --Variable identity

--                         INSERT INTO TutorialAppSchema.Users(
--                               [UserId],
--                               [FirstName],
--                               [LastName],
--                               [Email],
--                               [Gender],
--                               [Active]
--                         ) VALUES (
--                               @FirstName,
--                               @LastName,
--                               @Email,
--                               @Gender,
--                               @Active
--                         ) 

--                         SET @OutputUserId = @@IDENTITY  

--                         INSERT INTO TutorialAppSchema.UserSalary(
--                               UserId,
--                               Salary)
--                         VALUES(
--                               @UserId,
--                               @Salary
--                         )
                        
--                         INSERT INTO TutorialAppSchema.UserJobInfo(
--                               UserId,
--                               Department,
--                               JobTitle)
--                         VALUES(
--                               @UserId,
--                               @Department,
--                               @JobTitle
--                         )
--                   END
--             END
--       ELSE -- here we are updating the users who exists 
--             BEGIN
--                   UPDATE TutorialAppSchema.Users 
--                         SET FirstName = @FirstName,
--                         LastName = @LastName,
--                         Email = @Email,
--                         Gender = @Gender,
--                         Active = @Active
--                         WHERE UserId = @UserId

--                   UPDATE TutorialAppSchema.UserSalary
--                         SET Salary = @Salary
--                         WHERE UserId = @UserId

--                   UPDATE TutorialAppSchema.UserJobInfo
--                         SET JobTitle = @JobTitle
--                             Department = @Department
--                         WHERE UserId = @UserId
--             END
--  END



   
